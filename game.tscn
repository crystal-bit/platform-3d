[gd_scene load_steps=11 format=3 uid="uid://bnqe37j0if8oq"]

[ext_resource type="PackedScene" path="res://objects/player.tscn" id="1_yrwpo"]
[ext_resource type="Material" uid="uid://rh34e3fs4skp" path="res://objects/level_material.tres" id="3_ygqb1"]

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_6jqg2"]
sky_top_color = Color(0.384314, 0.454902, 0.54902, 1)
sky_horizon_color = Color(0.642157, 0.659804, 0.683334, 1)
ground_bottom_color = Color(0.643137, 0.658824, 0.682353, 1)
ground_horizon_color = Color(0.643137, 0.658824, 0.682353, 1)

[sub_resource type="Sky" id="Sky_aw8gu"]
sky_material = SubResource("ProceduralSkyMaterial_6jqg2")

[sub_resource type="Environment" id="Environment_f5wl3"]
background_mode = 2
sky = SubResource("Sky_aw8gu")
tonemap_mode = 2
glow_enabled = true

[sub_resource type="GDScript" id="GDScript_alas7"]
script/source = "extends CharacterBody3D


const SPEED = 5.0
const JUMP_VELOCITY = 4.5

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/3d/default_gravity\")


func _physics_process(delta):
	# Add the gravity.
	if not is_on_floor():
		velocity.y -= gravity * delta

	# Handle Jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir = Input.get_vector(\"ui_left\", \"ui_right\", \"ui_up\", \"ui_down\")
	var direction = (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * SPEED
		velocity.z = direction.z * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		velocity.z = move_toward(velocity.z, 0, SPEED)

	move_and_slide()
"

[sub_resource type="PlaneMesh" id="PlaneMesh_rg2bj"]
material = ExtResource("3_ygqb1")
size = Vector2(20, 20)

[sub_resource type="BoxShape3D" id="BoxShape3D_gxyla"]
size = Vector3(20, 0, 20)

[sub_resource type="BoxMesh" id="BoxMesh_yhtow"]
size = Vector3(2, 2, 2)

[sub_resource type="BoxShape3D" id="BoxShape3D_o65ds"]
size = Vector3(2, 2, 2)

[node name="Game" type="Node3D"]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_f5wl3")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(-0.817077, -0.356747, 0.452899, 0.553564, -0.704961, 0.443392, 0.161097, 0.612994, 0.77349, 7.45405, 0, 11.0694)
shadow_enabled = true

[node name="Player" parent="." instance=ExtResource("1_yrwpo")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -1.5, 1.39717, 0)
script = SubResource("GDScript_alas7")

[node name="Floor" type="StaticBody3D" parent="."]

[node name="FloorMesh" type="MeshInstance3D" parent="Floor"]
mesh = SubResource("PlaneMesh_rg2bj")
skeleton = NodePath("../..")

[node name="CollisionShape3D" type="CollisionShape3D" parent="Floor"]
shape = SubResource("BoxShape3D_gxyla")

[node name="Box" type="StaticBody3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 2.5, 1, 0)
metadata/_edit_group_ = true

[node name="Mesh" type="MeshInstance3D" parent="Box"]
material_override = ExtResource("3_ygqb1")
mesh = SubResource("BoxMesh_yhtow")
skeleton = NodePath("../..")

[node name="CollisionShape3D" type="CollisionShape3D" parent="Box"]
shape = SubResource("BoxShape3D_o65ds")

[node name="Box2" type="StaticBody3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 6.5, 1, 0)
metadata/_edit_group_ = true

[node name="Mesh" type="MeshInstance3D" parent="Box2"]
material_override = ExtResource("3_ygqb1")
mesh = SubResource("BoxMesh_yhtow")
skeleton = NodePath("../..")

[node name="CollisionShape3D" type="CollisionShape3D" parent="Box2"]
shape = SubResource("BoxShape3D_o65ds")

[node name="Camera3D" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2, 10.7176)
